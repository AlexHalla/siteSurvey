import React, { useState } from 'react';
import { useAuth } from '../../../hooks/useAuth';
import styles from './LoginForm.module.css';

const LoginForm = ({ onSwitchToRegister }) => {
  const [formData, setFormData] = useState({
    identifier: '',
    password: ''
  });
  const [errors, setErrors] = useState({});
  const [isLoading, setIsLoading] = useState(false);
  const [successMessage, setSuccessMessage] = useState('');
  const { login } = useAuth();

  const handleChange = (e) => {
    setFormData({
      ...formData,
      [e.target.name]: e.target.value
    });
    if (errors[e.target.name]) {
      setErrors({
        ...errors,
        [e.target.name]: ''
      });
    }
    if (successMessage) {
      setSuccessMessage('');
    }
  };

  const validateForm = () => {
    const newErrors = {};

    if (!formData.identifier.trim()) {
      newErrors.identifier = 'Email –∏–ª–∏ —Ç–µ–ª–µ—Ñ–æ–Ω';
    }

    if (!formData.password) {
      newErrors.password = '–ü–∞—Ä–æ–ª—å –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω';
    }

    return newErrors;
  };

  const handleSubmit = async (e) => {
    e.preventDefault();
    
    const formErrors = validateForm();
    if (Object.keys(formErrors).length > 0) {
      setErrors(formErrors);
      return;
    }

    setIsLoading(true);
    setErrors({});
    setSuccessMessage('');

    try {
      console.log('üì® –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –≤—Ö–æ–¥–∞:', formData);

      const result = await login(formData.identifier, formData.password);
      
      if (result.success) {
        // ‚úÖ –£–°–ü–ï–®–ù–´–ô –í–•–û–î
        console.log('‚úÖ –í—Ö–æ–¥ —É—Å–ø–µ—à–µ–Ω:', result);
        
        setSuccessMessage('–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!'); // –£–ø—Ä–æ—â–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        
        // üéØ –ü–ï–†–ï–ù–ê–ü–†–ê–í–õ–ï–ù–ò–ï –ù–ê –ì–õ–ê–í–ù–£–Æ
        setTimeout(() => {
          console.log('üîÑ –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É...');
          window.location.href = '/';
        }, 1500);

      } else {
        setErrors({ submit: result.error || '–ù–µ–≤–µ—Ä–Ω—ã–µ —É—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ' });
      }

    } catch (error) {
      console.error('üö´ –û—à–∏–±–∫–∞:', error);
      setErrors({ submit: '–û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å —Å–µ—Ä–≤–µ—Ä–æ–º' });
    } finally {
      setIsLoading(false);
    }
  };

  return (
    <form onSubmit={handleSubmit} className={styles.form}>
      {successMessage && (
        <div className={styles.successMessage}>
          ‚úÖ {successMessage}
        </div>
      )}

      <div className={styles.inputGroup}>
        <label className={styles.label}>Email, —Ç–µ–ª–µ—Ñ–æ–Ω –∏–ª–∏ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</label>
        <input
          type="text"
          name="identifier"
          className={`${styles.input} ${errors.identifier ? styles.error : ''}`}
          value={formData.identifier}
          onChange={handleChange}
          placeholder="–í–≤–µ–¥–∏—Ç–µ email –∏–ª–∏ —Ç–µ–ª–µ—Ñ–æ–Ω"
          required
          disabled={isLoading}
        />
        {errors.identifier && <span className={styles.errorText}>{errors.identifier}</span>}
      </div>

      <div className={styles.inputGroup}>
        <label className={styles.label}>–ü–∞—Ä–æ–ª—å</label>
        <input
          type="password"
          name="password"
          className={`${styles.input} ${errors.password ? styles.error : ''}`}
          value={formData.password}
          onChange={handleChange}
          placeholder="–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –ø–∞—Ä–æ–ª—å"
          required
          disabled={isLoading}
        />
        {errors.password && <span className={styles.errorText}>{errors.password}</span>}
      </div>

      <div className={styles.options}>
        <button type="button" className={styles.link}>
          –ó–∞–±—ã–ª–∏ –ø–∞—Ä–æ–ª—å?
        </button>
      </div>

      {errors.submit && (
        <div className={styles.submitError}>‚ùå {errors.submit}</div>
      )}

      <div className={styles.buttons}>
        <button 
          type="button" 
          className={styles.createAccount}
          onClick={onSwitchToRegister}
          disabled={isLoading}
        >
          –°–æ–∑–¥–∞—Ç—å –∞–∫–∫–∞—É–Ω—Ç
        </button>
        
        <button 
          type="submit" 
          className={styles.loginButton}
          disabled={isLoading}
        >
          {isLoading ? '‚è≥ –í—Ö–æ–¥...' : '–í–æ–π—Ç–∏'}
        </button>
      </div>
    </form>
  );
};

export default LoginForm;